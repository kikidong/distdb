

所有的高级操作都是由最简单的原语实现的
									--microcai

数据库的原语就是各自在使用 socket 通讯的时候使用的协议，所有数据库的高级接口 (odbc啊 occi 啊)
都是利用的这些低阶的原语实现的。

而这些原语，每个数据库都不一样。

如果 distdb 使用这些原语，那么，显然工作量和开发 occi 接口一样巨大。而这么巨大的工作量，只能支持 oracle 
数据库。如果要支持别的数据库，就要加倍的开发量

所以，找到一个所有数据库都能支持的，相对又比较低阶的原语就很重要。

目前有啊，很方便的就是 SQL 语句。已经很高级了，但是相对于项目本身，直接使用 SQL 语句操作数据库又是很底层的
操作。

而且所有的数据库都能支持一些 SQL 语句。这些共同支持的SQL 操作被 distdb 用来当作自己的原语。

对数据库的操作都可以被转换为 SQL 语句。对于不能转换的，distdb 无能为力。因为这是 特定于特定的数据库类型的

distdb 首先导出一个支持 SQL 操作的 RPC 调用接口，接着，所有别的操作都可以建立在这个RPC接口之上。

RPC接口由 libdistdb.so (distdb.dll) 导出。偶将负责在 libdistdb 之上构建一个高级的数据库操作视图。这
个高级操作视图也将导出 java 接口，并使用 JNI(Java Native Interface) 调用。


RPC连接的使用　

首先初始化的时候调用　distdb_rpc_connectto(char*server) 连接RPC服务器。











 

